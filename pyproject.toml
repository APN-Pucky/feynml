[build-system]
requires = [
  "hatchling",
  "hatch-vcs",
]
build-backend = "hatchling.build"

[project]
name = "feynml"
dynamic = ["version"]
description = 'Feynman diagram markup language'
readme = "README.md"
requires-python = ">=3.8"
keywords = []
authors = [
  { name = "Alexander Puck Neuwirth", email = "alexander@neuwirth-informatik.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Scientific/Engineering",
]
dependencies = [
    "particle",
    "xsdata[cli,lxml,soap]",
    "cssutils>=2.10.2",
    "cssselect",
    "deprecated",
    "deprecation",
    "smpl_io>=1.1.2",
    "smpl_doc>=1.1.3",
    "smpl_util>=1.0.0",
]

[project.optional-dependencies]
lint = [
    "ruff",
]
interfaces = [
    "pyqgraf>=0.0.3",
    "pyhepmc",
    "pylhe",
]
test = [
    "feynml[interfaces]",
    "feynmodel",
    "pytest",
    "pytest-cov",
]
dev = [
    "pre-commit",
    "ipython",
    "jupyter",
    "jupyterlab",
]
docs = [
    "sphinx"
]

[project.urls]
Documentation = "https://github.com/APN-Pucky/feynml#readme"
Issues = "https://github.com/APN-Pucky/feynml/issues"
Source = "https://github.com/APN-Pucky/feynml/"

[tool.hatch]
version.source = "vcs"

[tool.hatch.envs.all]
features = [
    "lint",
    "interfaces",
    "dev",
    "docs",
    "test",
]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "RUF012",   # TODO: mutable class attributes
  "SIM115",   # TODO: use context manager for opening files
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts = [ "-v",  "--doctest-modules", "--ignore=docs/source/conf.py", "--ignore=debug", "--ignore=debug2" ]
filterwarnings = [
    'error',
    'ignore: pkg_resources is deprecated as an API:DeprecationWarning',
    "ignore: 'cgi' is deprecated and slated for removal in Python 3.13",
    "ignore:The 'wheel' package is no longer the canonical location of the 'bdist_wheel' command:DeprecationWarning",
]
